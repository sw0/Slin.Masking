{
  //Template Description:
  //  This is the preferred template, which has named formatters and rules defined.
  //  Using named formatters, same purpose of formatters can share consisitent format definition by name.
  //  Default options will be applied. For more details, please check full masking.template_full.json file.

  "Masking": {
    //MASKING SETTINGS
    "UrlKeys": [ "requestUrl", "query" ], //for advance usage with regular expression, please check option 'UrlMaskingPatterns'
    "SerializedKeys": [ "Body", "RequestBody", "ResponseBody" ],
    "NamedFormatters": {
      //NOTE: definition names here are case-insensitive.
      //For a given Name(unique and ignore case), the formatter contains: 
      //  valid Format, 
      //  optional ValuePattern and IgnoreCase for value pattern. ValuePattern can be regular expression(simple regex usage).
      //  default true of Enabled.
      //  Enabled: default true. BUT no need to set it to False here.
      "default": { "Format": "*" },
      "null": { "Format": "null" },
      "empty": { "Format": "EMPTY" },
      "redacted": { "Format": "REDACTED" },
      "credential_long": {
        "Format": "L9*4R6",
        "ValuePattern": ".{24,}"
      },
      "credential_short": {
        "Format": "L3*4R3",
        "ValuePattern": ".{10,24}"
      },
      "password": { "Format": "*6" },
      "dob": { "Format": "REDACTED" },
      "name": { "Format": "L2*" },
      "ssn": { "Format": "*" },
      "phone": { "Format": "L3R4" },
      "email": {
        "Format": "L3*@",
        "Description": "email is special, shawn@a.cn will be masked as 'sha**@a.cn'"
      },
      "pan": {
        "ValuePattern": "^\\d{15,16}$",
        "Format": "L4*R4",
        //IgnoreCase is working with ValuePattern.
        "IgnoreCase": false,
        "Enabled": true //default true
      },
      "cvv": { "Format": "*" },
      "Remove": { "RemoveNode": true } //todo not supported yet, do we need it?
    },
    "Rules": {
      //NOTE: rule key by default is case-insensitive, so does name of formatter. 
      //It's controlled by property:IgnoreKeyCase, default is true
      "authorization": {
        "KeyName": "^authorization|access_token|accesstoken|code$",
        "IgnoreKeyCase": true,
        "Formatters": [
          { "Name": "credential_long" },
          { "Name": "credential_short" }
        ]
      },
      "SSN": { "Formatters": [ { "Name": "SSN" } ] },
      "DOB": { "Formatters": [ { "Name": "dob" } ] },
      "Pan": {
        "KeyName": "^pan|PersonalAccountNumber|PrimaryAccountNumber$",
        //IgnoreKeyCase is working with KeyName
        "IgnoreKeyCase": true,
        "Formatters": [ { "Name": "pan" } ]
      },
      "cvv": { "Formatters": [ { "Name": "cvv" } ] },
      "Balance": { "Formatters": [ { "Format": "null" } ] },
      "Names": {
        "KeyName": "^(First|Last)Name$",
        "IgnoreKeyCase": true,
        "Formatters": [ { "Name": "Name" } ]
      },
      "Email": { "Formatters": [ { "Name": "email" } ] },
      "Password": { "Formatters": [ { "Format": "*" } ] },
      "PhoneNumber": { "Formatters": [ { "Name": "phone" } ] }
    }
  }
}
