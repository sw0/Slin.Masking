using System.Collections.Generic;

namespace Slin.Masking
{
	public class MaskRuleDefinition
	{
		public string Description { get; set; }

		/// <summary>
		/// by default, Slin.Masking taking keyName case-insensitive.If you want it be case sensitive, add "(?#casesensitive)" as prefix.Note: all prefix is all lower-cased.
		/// </summary>
		public string KeyName { get; set; } = "";

		/// <summary>
		/// default false. 
		/// Note, this is usually used when KeyName is set as a pattern.
		/// If true, it will be concerted as a pattern. So maybe it's better to add ^ or $ in KeyName's value.
		/// </summary>
		public bool IngoreKeyCase { get; set; }


		public List<ValueFormatterDefinition> Formatters { get; set; }

		/// <summary>
		/// Indicates if the matched key allowed or not by key's length, only takig effects when using KeyName is a regex pattern. 
		/// The purpsoe is dont't want to make caching taking two much memory. Especially for those dynamic key names generated by program (I guess there might have such scenarios, although it's rare).
		/// </summary>
		public int KeyNameLenLimitToCache { get; set; }

		//public ModeIfArray ModeIfArray { get; set; } = ModeIfArray.Default;

	}
}
