<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      internalLogLevel="Info"
      internalLogFile="c:\temp\internal-nlog-AspNetCore.txt">

	<!-- enable asp.net core layout renderers -->
	<extensions>
		<add assembly="NLog.Web.AspNetCore"/>
	</extensions>
	
	<!-- the targets to write to -->
	<targets>
		<!-- File Target for all log messages with basic details -->
		<target xsi:type="File" name="allfile" fileName="c:\temp\nlog-AspNetCore-all1-${shortdate}.log"
				layout="${longdate}|${event-properties:item=EventId:whenEmpty=0}|${level:uppercase=true}|${logger}|${message} ${exception:format=tostring}" />

		<!-- File Target for own log messages with extra web details using some ASP.NET core renderers -->
		<target xsi:type="File" name="ownFile-web" fileName="c:\temp\nlog-AspNetCore-own1-${shortdate}.log"
				layout="${longdate}|${event-properties:item=EventId:whenEmpty=0}|${level:uppercase=true}|${logger}|${message} ${exception:format=tostring}|url: ${aspnet-request-url}|action: ${aspnet-mvc-action}|${callsite}" />

		<!--Console Target for hosting lifetime messages to improve Docker / Visual Studio startup detection -->
		<target xsi:type="Console" name="lifetimeConsole" layout="${MicrosoftConsoleLayout}" />

		<target xsi:type="File" name="application"
			  fileName="C:/temp/webapi6/app_${shortdate:format:yyyyMMdd}.log"
			  archiveFileName="C:/temp/webapi6/app_${shortdate:format:yyyyMMdd}.log.{#}" archiveAboveSize="80000000" archiveNumbering="Rolling" maxArchiveFiles="10"
			  >
			<!--<layout xsi:type="JsonLayout" includeAllProperties="true" excludeProperties="message" includeMdc="true">-->
			<layout xsi:type="JsonLayout" includeAllProperties="false" excludeProperties="message" includeMdc="false">
				<attribute name="time" layout="${date:format:yyyy-MM-ddTHH\:mm\:ss.fff}" />
				<attribute name="level" layout="${pad:padding=5:inner=${level:uppercase=true}}"/>
				<!--<attribute name="servicecontext" layout="${mdlc:item=LogContext}"/>-->
				<attribute name="thread" layout="${threadid}"/>
				<attribute name="logger" layout="${logger:shortName=true}"/>
				<attribute name="connectionId" layout="${aspnet-request-connection-id}"/>
				<attribute name="correlationId" layout="${mdlc:item=correlationId}"/>
				<!--not working: school-->
				<attribute name="clientRequestId" layout="${aspnet-request-headers:HeaderNames=X-Request-ID:valuesOnly=true}"/>
				<attribute name="message" layout="${message}" />
				<attribute name="details" encode="false" layout="${event-properties-masker}" />

				<!--<attribute name="data" encode="false" >
					<layout type='JsonLayout' includeAllProperties="true" maxRecursionLimit="20"/>
				</attribute>-->
				<attribute name="exception" layout="${exception:format=ToString}" />
			</layout>
		</target>
		<target xsi:type="File" name="traffic"
			  fileName="C:/temp/webapi6/traffic_${shortdate:format:yyyyMMdd}.log"
			  archiveFileName="C:/temp/webapi6/traffic_${shortdate:format:yyyyMMdd}.log.{#}" archiveAboveSize="80000000" archiveNumbering="Rolling" maxArchiveFiles="10"
			  >
			<layout xsi:type="JsonLayout" includeAllProperties="false" includeMdc="false">
				<attribute name="time" layout="${date:format:yyyy-MM-ddTHH\:mm\:ss.fff}" />
				<attribute name="level" layout="${pad:padding=5:inner=${level:uppercase=true}}"/>
				<!--<attribute name="servicecontext" layout="${mdlc:item=LogContext}"/>-->
				<attribute name="thread" layout="${threadid}"/>
				<attribute name="correlationId" layout="${mdlc:item=correlationId}"/>
				<attribute name="requestPath" layout="${event-properties:RequestPath}"/>
				<attribute name="logger" layout="${logger:shortName=true}"/>
				<attribute name="clientRequestId" layout="${aspnet-request-headers:HeaderNames=X-Request-ID:valuesOnly=true}"/>
				<attribute name="clientIp" layout="${aspnet-request-ip}"/>
				<attribute name="eventName" layout="${event-properties:EventName}"/>
				<attribute name="requestUrl" layout="${aspnet-request-url}"/>
				<attribute name="details" encode="false" layout="${event-properties-masker}" />
				<!--<attribute name="message" layout="${message}" />-->
				<!--<attribute name="data" encode="false" >
					<layout type='JsonLayout' includeAllProperties="true" maxRecursionLimit="20"/>
				</attribute>-->
				<attribute name="exception" layout="${exception:format=ToString}" />
			</layout>
		</target>
	</targets>

	<!-- rules to map from logger name to target -->
	<rules>
		<!--All logs, including from Microsoft-->
		<logger name="*" minlevel="Trace" writeTo="allfile" />

		<!--Output hosting lifetime messages to console target for faster startup detection -->
		<logger name="Microsoft.Hosting.Lifetime" minlevel="Info" writeTo="lifetimeConsole, ownFile-web" final="true" />

		<logger name="Microsoft.AspNetCore.HttpLogging.HttpLoggingMiddleware" minlevel="Info" writeTo="traffic" final="true" >
			<filters defaultAction="Ignore">
				<when condition="equals('${event-properties:EventName}', 'ResponseLog')" action="Log" />
				<when condition="equals('${event-properties:EventName}', 'ResponseBody')" action="Log" />
				<when condition="equals('${event-properties:EventName}', 'RequestLog')" action="Log" />
				<when condition="equals('${event-properties:EventName}', 'RequestBody')" action="Log" />
			</filters>
		</logger>

		<!--Skip non-critical Microsoft logs and so log only own logs (BlackHole) -->
		<logger name="Microsoft.*" maxlevel="Info" final="true" />
		<logger name="System.Net.Http.*" maxlevel="Info" final="true" />

		<logger name="*" minlevel="Trace" writeTo="application" final="true"/>

		<!--<logger name="*" minlevel="Trace" writeTo="ownFile-web" />-->
	</rules>
</nlog>